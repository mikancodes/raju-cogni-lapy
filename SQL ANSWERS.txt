y1.
select booking_id,
       flight_name,
       DATE_ADD(flight_date, INTERVAL -5 DAY) as PREPONED_DEPARTURE_DATE
from  flight f
join Booking b
using(flight_id)
where flight_source != 'Miami'
order by booking_id desc;


2.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       PHONE_NO,
       PURCHASE_DATE
FROM CUSTOMER_DETAILS C
JOIN PURCHASE_DETAILS P
USING(CUSTOMER_ID)
WHERE CITY != 'DELHI';


3.
SELECT Cust_name,
       Order_id,
       Order_date
from CUSTOMERS C
JOIN ORDERS O
WHERE Email_id LIKE '%gmail%'
ORDER BY Order_id desc;


4.
SELECT A.BOAT_ID,
       A.BOAT_NAME
FROM BOAT_DETAILS A
JOIN BOAT_DETAILS B
WHERE A.SEAT_CAPACITY=B.SEAT_CAPACITY
ORDER BY BOAT_NAME;


5.
SELECT UNIQUE(PRODUCT_NAM),CATEGORY
FROM PRODUCTS P
JOIN FEEDBACK F
USING(PRODUCT_ID)
WHERE RATING_VALUE<3
ORDER BYPRODUCT_NAME ASC;


6.
SELECT FULLNAME,EMAIL,MEMBER_ID
FROM MEMBERS 
WHERE MONTH(DATE_OF_BIRTH) IN (01,12)
ORDER BY FULLNAME DESC;


7.
SELECT CUST_NAME,
       EMAIL_ID,
       COALESCE(ADDRESS,PHONE_NO) AS CONTACT_INFO
FROM CUSTOMERS
WHERE ORDER_DATE != DELIVERY_DATE
ORDER BY CUST_NAME ASC;


8.
SELECT MOVIE_NAME,
       THEATRE_ID, 
       DURATION  
FROM MOVIE_MASTER M
JOIN SCREENING_MASTER S
USING(MOVIE_ID)
WHERE UPPER(LANGUAGE) !='HINDI'
ORDER BY MOVIE_NAME DESC;



9.
SELECT 
	A.FLIGHT_NAME,
	A.FLIGHT_SOURCE
FROM FLIGHT_DETAILS A
JOIN FLIGHT_DETAILS B
WHERE A.FLIGHT_DESTINATION =B.FLIGHT_DESTINATION 
AND FLIGHT_DESTINATION !='CHICAGO'
ORDER BY FLIGHT_DESTINATION ASC,FLIGHT_NAME ASC;



10.
SELECT 
      FULLNAME
FROM MEMBERS 
JOIN FEEDBACK
USING(MEMBER_ID)
WHERE ADDRESS='BANGALORE'
AND EMAIL LIKE '%gmail%'
AND RATING_VALUE>4
ORDER BY FULLNAME DESC;



11.
SELECT P.P_FIRST_NAME,
       A.APP_REASON,
       A.APP_TIME,
       B.BILL_AMOUNT
FROM PATIENT P
JOIN APPOINTMENT A
USING(PATIENT_ID)
JOIN BILL B
USING(APP_NUMBER)
WHERE UPPER(P.ADDRESS) LIKE '%AVENUE%'
ORDER BY A.APP_TIME ASC;


12.
SELECT DISTINCT(CUST_NAME),
       EMAIL_ID,
       PHONE_NO
FROM CUSTOMERS C
JOIN ORDERS O
USING(CUST_ID)
WHERE MONTH(ORDER_DATE) BETWEEN 02 AND 08
ORDER BY CUST_NAME ASC;



13.
SELECT BOAT_ID,
       BOAT_NAME,
       BOAT_TYPE,
       ROUND(COUNT(SEAT_CAPACITY*0.75),2) AS SEAT_COUNT
FROM BOAT_DETAILS
JOIN RIDE_DETAILS
USING(BOAT_ID)
GROUP BY BOAT_ID,BOAT_NAME,BOAT_TYPE
HAVING YEAR(DOT)=2000
ORDER BY BOAT_NAME DESC;


14.
SELECT M.MOVIE_ID,
       M.MOVIE_NAME,
       S.SHOW_TIME
FROM MOVIE_MASTER M
JOIN SCREENING_MASTER S
USING(MOVIE_ID)
WHERE UPPER(LANGUEGE)='TAMIL'
AND CERTIFICATE != 'A'
ORDER BY S.SCREENING_ID DESC;



15.
SELECT PATIENT_ID,
       P_FIRST_NAME,
       CITY,
       P_AGEP
FROM PATIENT P
LEFT JOIN APPOINTMENT A
USING(PATIENT_ID)
LEFT JOIN BILL B
USING(APP_NUMBER)
LEFT JOIN PAYMENT P
USING(BILL_NUMBER)
WHERE P.PAYMENT_ID IS NULL
ORDER BY P.AGE;


16.
SELECT C.CUSTOMER_ID,
       C.CUSTOMER_NAME,
       P.POLICY_ID,
       PO.TOTAL_AMOUNT,
       PO.NO_OF_YEARS
FROM CUSTOMER C
JOIN POLICYENROLLMENT  PO
USING(CUSTOMER_ID)
JOIN POLICY P
USING(POLICY_ID)
WHERE C.EMAIL_ID LIKE '%gmail%'
ORDER BY PO.ENROLLMENT_ID DESC;


17.
SELECT C.CUSTOMER_ID,
       C.CUSTOMER_NAME,
       P.POLICY_ID
FEOM CUSTOMER C
JOIN POLICYENROLLMENT  PO
USING(CUSTOMER_ID)
JOIN POLICY P
USING(POLICY_ID)
WHERE C.GENDER='M'
ORDER BY PO.ENROLLMENT_ID;


18.
SELECT POLICY_NAME,
       POLICY_ID
FROM POLICY P
JOIN POLICYENROLLMENT PO
USING(POLICY_ID)
WHERE PO.ENROLLMENT_ID=
(SELECT ENROLLMENT_ID
FROM POLICYENROLLMENT
WHERE NO_OF_YEARS=(SELECT MAX(MAX_YEAR) FROM
((SELECT ENROLLMENT_ID,COUNT(NO_OF_YEARS) AS MAX_YEAR
FROM POLICYENROLLMENT
GROUP BY ENROLLMENT_ID)B));


19.
SELECT CUSTOMER_NAME,
       TOTAL_AMOUNT_PAID
FROM CUSTOMER_MASTER
JOIN BOOKING_DETAILS
USING(CUSTOMER_ID)
WHERE YEAR(BOOKING_DATE)=2018
ORDER BY BOOKING_ID DESC;



20.
SELECT P_FIRST_NAME,
          CITY
FROM PATIENT A
JOIN PATIENT B
WHERE A.CITY=B.CITY
ORDER BY CITY ASC,P_FIRST_NAME ASC;



21.
SELECT CUSTOMER_NAME
FROM CUSTOMER 
JOIN SUBSCRIPTION 
USING(PHONE_NUMBER)
WHERE RECHARGE_DATE=
(SELECT MAX(RECHARGE_DATE)FROM SUBSCRIPTION)
ORDER BY CUSTOMER _NAME DESC;


22.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       DATE_OF_BIRTH,
       MARITAL_STATUS,
       GENDER,
       GURDIAN_NAME,
       CONTACT_NO,
       MAIL_ID
FROM CUSTOMER_PERSONAL_INFO
WHERE GENDER='M'
AND MARITAL_STATUS='MARRIED'
ORDER BY CUSTOMER_ID ASC;



23.
SELECT C.CUSTOMER_ID,
       A.ACCOUNT_NO,
       CONCAT(SUBSTRING(C.CUSTOMER_ID,-3,3),SUBSTRING(A.ACCOUNT_NO,-4,4)) AS PASSCODE
FROM CUSTOMER_PERSONAL_INFO C
JOIN ACCOUNT_INFO A
USING(CUSTOMER_ID)
ORDER BY C.CUSTOMER_ID ASC;


24.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       DATE_OF_BIRTH,
       GURDIAN_NAME
FROM CUSTOMER_PERSONAL_INFO
WHERE CUSTOMER_NAME LIKE 'J%'
ORDER BY CUSTOMER_ID ASC;



25.
SELECT C.CUSTOMER_ID,
       C.CUSTOMER_NAME,
       A.ACCOUNT NUMBER,
       A.ACCOUNT TYPE,
       B.BANK_NAME,
       B.IFSC_CODE,
       A.INITIAL_DEPOSITE
       ROUND
       (CASE
             WHEN A.ACCOUNT_TYPE='SAVINGS' THEN (INTEREST+(INTEREST*0.1))
             ELSE INTEREST
       END ,2) AS NEW_INTEREST
FROM CUSTOMER_PERSONAL_INFO C
JOIN ACCOUNT_INFO A
USING(CUSTOME_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
WHERE C.CUSTOMER_NAME LIKE 'J%'
ORDER BY C.CUSTOMER_ID;
 


26.
SELECT C.CUSTOMER_ID,
       CUSTOMER_NAME,
       ACCOUNT_NO,
       INITIAL_DEPOSITE,
       CASE
           WHEN INITIAL_DEPOSITE=0 THEN '0%'
           WHEN INITIAL_DEPOSITE<=10000 THEN '3%'
           WHEN INITIAL_DEPOSITE>10000 AND INITIAL_DEPOSITE<20000 THEN '5%'
           WHEN INITIAL_DEPOSITE>=20000 AND INITIAL_DEPOSITE<=30000 THEN '7%'
           WHEN INITIAL_DEPOSITE>30000 THEN '10%'
       END AS TAX_PERCENTAGE
FROM CUSTOEMR_PERSONAL_INFO C
JOIN ACCOUNT_INFO A
USING(CUSTOMER_ID)
ORDER BY C.CUSTOMER_ID ASC;



27.
SELECT C.CUSTOMER_ID,
       A.ACCOUNT_TYPE,
       A.ACCOUNT_NO,
       B.BANK_NAME
FROM CUSTOMER_PERSONAL_INFO C
JOIN ACCOUNT_INFO A
USING(CUSTOME_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
ORDER BY CUSTOMER_ID ASC;


28.
SELECT C.CUSTOMER_ID,
       CUSTOMER_NAME,
       GURDIAN_NAME,
       REFERENCE_ACCOUNT
FROM CUSTOMER_PERSONAL_INFO C
JOIN CUSTOMER_REFERENCE
USING(CUSTOMER_ID)
WHERE RELATION='FRIEND'
ORDER BY C.CUSTOMER_ID;


29.
SELECT CUSTOMER_ID,
       ACCOUNT_NUMBER,
       CONCAT('$',INTEREST) AS INTEREST_AMT
FROM ACCOUNT_INFO
ORDER BY INTEREST_AMT,CUSTOMER_ID     



30.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       ACCOUNT_N0,
       ACCOUNT_TYPE,
       ACTIVATION_DATE,
       BANK_NAME
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
WHERE DATE(ACTIVATION_DATE)='2012-04-10'
ORDER BY CUSTOMER_ID;



31.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       ACCOUNT_N0,
       BANK_NAME
       BRANCH_NAME,
       IFSC CODE,
       CITIZENSHIP,
       INTEREST,
       INITIAL_DEPOSITE
FROM CUSTOMER_PERSONAL_INFO
LEFT JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
ORDER BY CUSTOMER_ID;



32.
SELECT C.CUSTOMER_ID,
       CUSTOMER_NAME,
       DATE_OF_BIRTH,
       GURDIAN_NAME,
       CONTACT_NO,
       MAIL_ID,
       REFERENCE_ACC_NAME
FROM CUSTOMER_PERSONAL_INFO C
JOIN CUSTOMER_REFERENCE
USING(CUSTOMER_ID)
WHERE IDENTIFICATION_DOC_TYPE='PASSPORT'
ORDER BY C.CUSTOMER_ID;



33.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       ACCOUNT_N0,
       ACCOUNT_TYPE,
       BANK_NAME
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
ORDER BY CUSTOMER_ID;



34.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       GENDER,
       MARITAL_STATUS,
       CONCAT(CUSTOMER_NAME,'_',GENDER,'_',MARITAL_STATUS) AS UNIQUE_REF_STRIN
FROM CUSTOMER_PERSONAL_INFO
ORDER BY CUSTOMER_ID;


35.
SELECT A.ACCOUNT_NO,
       C.CUSTOMER_ID,
       A.REGISTRATION_DATE,
       A.INITIAL_DEPOSITE,
FROM CUSTOMER_PERSONAL_INFO C
JOIN ACCOUNT_INFO A
USING(CUSTOMER_ID)
WHERE INITIAL_DEPOSITE BETWEEN 15000 AND 25000
ORDER BY ACCOUNT_NO ASC;
  


                                                                                                                                                                   
36
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       GURDIAN_NAME,
       IDENTIFICATION_DOC_TYPE,
       REFERENCE_ACC_NAME,
       ACCOUNT_TYPE,                                                             ü§∑‚Äç‚ôÇÔ∏è ü§∑‚Äç‚ôÇÔ∏è ü§∑‚Äç‚ôÇÔ∏è 
       IFSC,
       BANK_NAME,
       CAST(INITIAL_DEPOSITE+INTEREST)AS CURRENT_BALANCE
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
WHERE ACCOUNT_TYPE = 'SAVINGS'
ORDER BY CUSTOMER_ID;



37.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       GURDIAN_NAME,
       IDENTIFICATION_DOC_TYPE,
       REFERENCE_ACC_NAME,
       ACCOUNT_TYPE,
       IFSC,
       BANK_NAME,
       DATEDIFF(ACTIVATION_DATE,REGISTRATION_DATE) AS NOOFDAYSFORACTIVATION
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
WHERE ACCOUNT_TYPE =
ORDER BY ACCOUNT_NO;


38.
SELECT CUSTOMER_ID,
       ACCOUNT_TYPE,
       ACCOUNT_NO
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
WHERE BANK_NAME='HDFC'
AND REGISTRATION_DATE BETWEEN '2012-01-12' AND '2012-04-04'
ORDER BY CUSTOMER_ID;


39.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       CONCAT('+91-',SUBSTRING(CONTACT_NO,1,3),'-',SUBSTRING(CONTACT_NO,4,3),'-',SUBSTRING(CONTACT_NO,7,4)) AS CONTACT_ISD
FROM CUSTOMERS_PERSONAL_INFO
ORDER BY CUSTOMER_ID DESC;


40.
SELECT CUSTOMER_ID,
       CUSTOMER_NAME,
       DATE_OF_BIRTH,
       GUARDIAN_NAME,
       CONTACT_NO,
       MAIL_ID,
       REFERENCE_NAME
FROM CUSTOMER C
JOIN CUSTOMER_REFERENCE_INFO
USING(CUSTOMER_ID)
WHERE REFERENCE_ACC_NAME='RAGHUL'
ORDER BY customer_id;



41.
select customer_id,
       customer_name,
       account_no,
       bank_name,
       contact_no,
       mail_id
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
where addrss='BENGALORE'
ORDER BY CUSTOMER_ID;


42.
SELECT customer_id,
       customer_name,
       account_no,
       account_type,
       interest,
       initial_deposite,
       case
           when initial_deposite=20000 then 'high'
           when initial_deposite=16000 then 'moderate'
           when initial_deposite=10000 then 'average'
           when initial_deposite=5000 then 'low'
           when initial_deposite=0 then 'very low'
           else 'invalid'
       end as deposite_status
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
order by interest desc,customer_id desc;   



43.
SELECT customer_id,
       customer_name,
       account_no,
       account_type,
       interest,
       bank_name,
       initial_deposite
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
where interest=
(select max(interest) from account_info)
order by customer_id;



44.
select customer_id,
       customer_name,
       account_no,
       account_type,
       interest,
       initial_deposite
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
where initial_deposite=
(select max(initial_deposite) from account_info)
order by customer_id;



45.
select customer_id,
       bank_name,
       branch_name,
       ifsc,
       registration_date,
       activation_date
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
JOIN BANK_INFO B
USING(IFSC_CODE)
where month(activation_date)=03
order by customer_id;



46.
select customer_id,
       customer_name,
       account_no,
       account_type,
       initial_deposite,
       interest,
       ((interest/100)*initial_deposite) as interest_amt
FROM CUSTOMER_PERSONAL_INFO
JOIN ACCOUNT_INFO
USING(CUSTOMER_ID)
order by customer_id;








